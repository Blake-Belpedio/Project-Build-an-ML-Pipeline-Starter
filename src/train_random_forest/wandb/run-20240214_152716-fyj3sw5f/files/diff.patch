diff --git a/.gitignore b/.gitignore
index c52bbb6..9d39ec8 100644
--- a/.gitignore
+++ b/.gitignore
@@ -14,3 +14,13 @@
 *.ipynb
 *.ipynb
 *.ipynb
+/.vs/PythonSettings.json
+*.sqlite
+/mlruns/0/0352f3af8a0b43758a57fc9c2755457a/tags/mlflow.source.git.repoURL
+/mlruns/0/0352f3af8a0b43758a57fc9c2755457a/tags/mlflow.source.name
+/mlruns/0/0352f3af8a0b43758a57fc9c2755457a/tags/mlflow.source.type
+/mlruns/0/0352f3af8a0b43758a57fc9c2755457a/tags/mlflow.user
+/mlruns/0/0e3e53b608004eeeb7e2cf496a6cdacc
+/mlruns/0/0edb0c628bf04ab5a130891090d16c29
+/mlruns/0/3652c39127fa46388415d838b19a389d
+/mlruns/0/b5a6138c37ba4dfe96ad8172db571d13
diff --git a/.vs/PythonSettings.json b/.vs/PythonSettings.json
deleted file mode 100644
index 4920dac..0000000
--- a/.vs/PythonSettings.json
+++ /dev/null
@@ -1,3 +0,0 @@
-{
-  "SuppressConfigureTestFrameworkPrompt": "true"
-}
\ No newline at end of file
diff --git a/.vs/VSWorkspaceState.json b/.vs/VSWorkspaceState.json
index 8b14ded..9568b22 100644
--- a/.vs/VSWorkspaceState.json
+++ b/.vs/VSWorkspaceState.json
@@ -1,11 +1,6 @@
 {
   "ExpandedNodes": [
-    "",
-    "\\.github\\workflows",
-    "\\src",
-    "\\src\\basic_cleaning",
-    "\\src\\eda"
+    ""
   ],
-  "SelectedNode": "\\.github",
   "PreviewInSolutionExplorer": false
 }
\ No newline at end of file
diff --git a/.vs/slnx.sqlite b/.vs/slnx.sqlite
new file mode 100644
index 0000000..e69de29
diff --git a/main.py b/main.py
index 9abc5bb..d62bb60 100644
--- a/main.py
+++ b/main.py
@@ -49,21 +49,48 @@ def go(config: DictConfig):
             )
 
         if "basic_cleaning" in active_steps:
-            ##################
-            # Implement here #
-            ##################
-            pass
+
+                _ = mlflow.run(
+                     os.path.join(hydra.utils.get_original_cwd(), "src", "basic_cleaning"),
+                     "main",
+                     parameters={
+                         "input_artifact": "sample.csv:latest",
+                         "output_artifact": "clean_sample.csv",
+                         "output_type": "clean_sample",
+                         "output_description": "Data with outliers and null values removed",
+                         "min_price": config['etl']['min_price'],
+                         "max_price": config['etl']['max_price']
+                     },
+                 )
+                pass
 
         if "data_check" in active_steps:
-            ##################
-            # Implement here #
-            ##################
+            _ = mlflow.run(
+                     os.path.join(hydra.utils.get_original_cwd(), "src", "data_check"),
+                     "main",
+                     parameters={
+                         "csv": "clean_sample.csv:latest",
+                         "ref": "clean_sample.csv:reference",
+                         "kl_threshold": config["data_check"]["kl_threshold"],
+                         "min_price": config["etl"]["min_price"],
+                         "max_price": config["etl"]["max_price"]
+                     },
+                 )
+
+           
             pass
 
         if "data_split" in active_steps:
-            ##################
-            # Implement here #
-            ##################
+            _ = mlflow.run(
+    f"{config['main']['components_repository']}/train_val_test_split",
+    'main',
+    parameters = {
+        "input": "clean_sample.csv:latest",
+        "test_size": config["modeling"]["test_size"],
+        "random_seed": config["modeling"]["random_seed"],
+        "stratify_by": config["modeling"]["stratify_by"]
+    }
+)
             pass
 
         if "train_random_forest" in active_steps:
@@ -75,10 +102,20 @@ def go(config: DictConfig):
 
             # NOTE: use the rf_config we just created as the rf_config parameter for the train_random_forest
             # step
-
-            ##################
-            # Implement here #
-            ##################
+            _ = mlflow.run(
+                uri = os.path.join(
+                     hydra.utils.get_original_cwd(), "src", "train_random_forest"
+                ),
+                entry_point ="main",
+                parameters={
+                    "trainval_artifact": "trainval_data.csv:latest",
+                    "val_size": config["modeling"]["val_size"],
+                    "stratify_by": config["modeling"]["stratify_by"],
+                    "rf_config": rf_config,
+                    "max_tfidf_features": config["modeling"]["max_tfidf_features"],
+                    "output_artifact": "random_forest_export"
+                },
+             )
 
             pass
 
diff --git a/src/basic_cleaning/run.py b/src/basic_cleaning/run.py
index b496452..fa34a0a 100644
--- a/src/basic_cleaning/run.py
+++ b/src/basic_cleaning/run.py
@@ -33,6 +33,7 @@ def go(args):
     df = df[idx].copy()
     df['last_review'] = pd.to_datetime(df['last_review'])
     # TODO: add code to fix the issue happened when testing the model
+   
     
 
     # Save the cleaned data
@@ -49,48 +50,48 @@ def go(args):
 # TODO: In the code below, fill in the data type for each argumemt. The data type should be str, float or int. 
 # TODO: In the code below, fill in a description for each argument. The description should be a string.
 if __name__ == "__main__":
-
+    
     parser = argparse.ArgumentParser(description="A very basic data cleaning")
   
     parser.add_argument(
         "--input_artifact", 
-        type = ## INSERT TYPE HERE: str, float or int,
-        help = ## INSERT DESCRIPTION HERE,
+        type = str,
+        help = 'Defines input artifact from W&B',
         required = True
     )
 
     parser.add_argument(
         "--output_artifact", 
-        type = ## INSERT TYPE HERE: str, float or int,
-        help = ## INSERT DESCRIPTION HERE,
+        type = str,
+        help = 'Defines outbut artifact after cleaning process',
         required = True
     )
 
     parser.add_argument(
         "--output_type", 
-        type = ## INSERT TYPE HERE: str, float or int,
-        help = ## INSERT DESCRIPTION HERE,
+        type = str,
+        help = 'Defines type for output artifact',
         required = True
     )
 
     parser.add_argument(
         "--output_description", 
-        type = ## INSERT TYPE HERE: str, float or int,
-        help = ## INSERT DESCRIPTION HERE,
+        type = str,
+        help = 'defines output description',
         required = True
     )
 
     parser.add_argument(
         "--min_price", 
-        type = ## INSERT TYPE HERE: str, float or int,
-        help = ## INSERT DESCRIPTION HERE,
+        type = float,
+        help = 'Sets price floor for filtering',
         required = True
     )
 
     parser.add_argument(
         "--max_price",
-        type = ## INSERT TYPE HERE: str, float or int,
-        help = ## INSERT DESCRIPTION HERE,
+        type = float,
+        help = 'Sets price ceiling for filtering',
         required = True
     )
 
diff --git a/src/data_check/.ipynb_checkpoints/test_data-checkpoint.py b/src/data_check/.ipynb_checkpoints/test_data-checkpoint.py
new file mode 100644
index 0000000..75cf6cb
--- /dev/null
+++ b/src/data_check/.ipynb_checkpoints/test_data-checkpoint.py
@@ -0,0 +1,70 @@
+import pandas as pd
+import numpy as np
+import scipy.stats
+
+
+def test_column_names(data):
+
+    expected_colums = [
+        "id",
+        "name",
+        "host_id",
+        "host_name",
+        "neighbourhood_group",
+        "neighbourhood",
+        "latitude",
+        "longitude",
+        "room_type",
+        "price",
+        "minimum_nights",
+        "number_of_reviews",
+        "last_review",
+        "reviews_per_month",
+        "calculated_host_listings_count",
+        "availability_365",
+    ]
+
+    these_columns = data.columns.values
+
+    # This also enforces the same order
+    assert list(expected_colums) == list(these_columns)
+
+
+def test_neighborhood_names(data):
+
+    known_names = ["Bronx", "Brooklyn", "Manhattan", "Queens", "Staten Island"]
+
+    neigh = set(data['neighbourhood_group'].unique())
+
+    # Unordered check
+    assert set(known_names) == set(neigh)
+
+
+def test_proper_boundaries(data: pd.DataFrame):
+    """
+    Test proper longitude and latitude boundaries for properties in and around NYC
+    """
+    idx = data['longitude'].between(-74.25, -73.50) & data['latitude'].between(40.5, 41.2)
+
+    assert np.sum(~idx) == 0
+
+
+def test_similar_neigh_distrib(data: pd.DataFrame, ref_data: pd.DataFrame, kl_threshold: float):
+    """
+    Apply a threshold on the KL divergence to detect if the distribution of the new data is
+    significantly different than that of the reference dataset
+    """
+    dist1 = data['neighbourhood_group'].value_counts().sort_index()
+    dist2 = ref_data['neighbourhood_group'].value_counts().sort_index()
+
+    assert scipy.stats.entropy(dist1, dist2, base=2) < kl_threshold
+
+
+########################################################
+# Implement here test_row_count and test_price_range   #
+########################################################
+def test_row_count(data):
+    assert 15000 < data.shape[0] < 1000000
+
+def test_price_range(data, min_price, max_price):
+    assert data['price'].between(min_price,max_price)
\ No newline at end of file
diff --git a/src/data_check/test_data.py b/src/data_check/test_data.py
index 6ed3ec6..e24d5b2 100644
--- a/src/data_check/test_data.py
+++ b/src/data_check/test_data.py
@@ -63,3 +63,8 @@ def test_similar_neigh_distrib(data: pd.DataFrame, ref_data: pd.DataFrame, kl_th
 ########################################################
 # Implement here test_row_count and test_price_range   #
 ########################################################
+def test_row_count(data):
+    assert 15000 < data.shape[0] < 1000000
+
+def test_price_range(data, min_price, max_price):
+    assert data['price'].between(min_price,max_price).all()
\ No newline at end of file
diff --git a/src/eda/eda.ipynb b/src/eda/eda.ipynb
index 06abc38..0f5c878 100644
--- a/src/eda/eda.ipynb
+++ b/src/eda/eda.ipynb
@@ -2,8 +2,8 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 6,
-   "id": "1f72a955",
+   "execution_count": 1,
+   "id": "eb753525",
    "metadata": {
     "scrolled": true,
     "tags": []
@@ -13,72 +13,134 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Requirement already satisfied: wandb==0.13.9 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (0.13.9)\n",
-      "Requirement already satisfied: setproctitle in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (1.3.2)\n",
-      "Requirement already satisfied: protobuf!=4.21.0,<5,>=3.19.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (4.21.12)\n",
-      "Requirement already satisfied: docker-pycreds>=0.4.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (0.4.0)\n",
-      "Requirement already satisfied: setuptools in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (59.8.0)\n",
-      "Requirement already satisfied: pathtools in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (0.1.2)\n",
-      "Requirement already satisfied: Click!=8.0.0,>=7.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (8.1.3)\n",
-      "Requirement already satisfied: GitPython>=1.0.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (3.1.31)\n",
-      "Requirement already satisfied: appdirs>=1.4.3 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (1.4.4)\n",
-      "Requirement already satisfied: requests<3,>=2.0.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (2.28.2)\n",
-      "Requirement already satisfied: typing-extensions in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (4.5.0)\n",
-      "Requirement already satisfied: PyYAML in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (6.0)\n",
-      "Requirement already satisfied: sentry-sdk>=1.0.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (1.19.1)\n",
-      "Requirement already satisfied: psutil>=5.0.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (5.9.4)\n",
-      "Requirement already satisfied: six>=1.4.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from docker-pycreds>=0.4.0->wandb==0.13.9) (1.16.0)\n",
-      "Requirement already satisfied: gitdb<5,>=4.0.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from GitPython>=1.0.0->wandb==0.13.9) (4.0.10)\n",
-      "Requirement already satisfied: smmap<6,>=3.0.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from gitdb<5,>=4.0.1->GitPython>=1.0.0->wandb==0.13.9) (3.0.5)\n",
-      "Requirement already satisfied: idna<4,>=2.5 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<3,>=2.0.0->wandb==0.13.9) (3.4)\n",
-      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<3,>=2.0.0->wandb==0.13.9) (1.26.15)\n",
-      "Requirement already satisfied: charset-normalizer<4,>=2 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<3,>=2.0.0->wandb==0.13.9) (3.1.0)\n",
-      "Requirement already satisfied: certifi>=2017.4.17 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<3,>=2.0.0->wandb==0.13.9) (2022.12.7)\n",
-      "Requirement already satisfied: pandas-profiling==3.6.2 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (3.6.2)\n",
-      "Requirement already satisfied: multimethod<1.10,>=1.4 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (1.9.1)\n",
-      "Requirement already satisfied: jinja2<3.2,>=2.11.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (2.11.3)\n",
-      "Requirement already satisfied: matplotlib<3.7,>=3.2 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (3.6.2)\n",
-      "Requirement already satisfied: scipy<1.10,>=1.4.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (1.9.3)\n",
-      "Requirement already satisfied: htmlmin==0.1.12 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (0.1.12)\n",
-      "Requirement already satisfied: requests<2.29,>=2.24.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (2.28.2)\n",
-      "Requirement already satisfied: numpy<1.24,>=1.16.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (1.23.5)\n",
-      "Requirement already satisfied: seaborn<0.13,>=0.10.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (0.11.1)\n",
-      "Requirement already satisfied: statsmodels<0.14,>=0.13.2 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (0.13.5)\n",
-      "Requirement already satisfied: pydantic<1.11,>=1.8.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (1.10.7)\n",
-      "Requirement already satisfied: pandas!=1.4.0,<1.6,>1.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (1.2.3)\n",
-      "Requirement already satisfied: phik<0.13,>=0.11.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (0.12.3)\n",
-      "Requirement already satisfied: typeguard<2.14,>=2.13.2 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (2.13.3)\n",
-      "Requirement already satisfied: PyYAML<6.1,>=5.0.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (6.0)\n",
-      "Requirement already satisfied: visions[type_image_path]==0.7.5 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (0.7.5)\n",
-      "Requirement already satisfied: tqdm<4.65,>=4.48.2 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (4.64.1)\n",
-      "Requirement already satisfied: attrs>=19.3.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from visions[type_image_path]==0.7.5->pandas-profiling==3.6.2) (22.2.0)\n",
-      "Requirement already satisfied: networkx>=2.4 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from visions[type_image_path]==0.7.5->pandas-profiling==3.6.2) (3.1)\n",
-      "Requirement already satisfied: tangled-up-in-unicode>=0.0.4 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from visions[type_image_path]==0.7.5->pandas-profiling==3.6.2) (0.2.0)\n",
-      "Requirement already satisfied: Pillow in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from visions[type_image_path]==0.7.5->pandas-profiling==3.6.2) (9.5.0)\n",
-      "Requirement already satisfied: imagehash in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from visions[type_image_path]==0.7.5->pandas-profiling==3.6.2) (4.3.1)\n",
-      "Requirement already satisfied: MarkupSafe>=0.23 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from jinja2<3.2,>=2.11.1->pandas-profiling==3.6.2) (1.1.1)\n",
-      "Requirement already satisfied: pyparsing>=2.2.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (3.0.9)\n",
-      "Requirement already satisfied: python-dateutil>=2.7 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (2.8.2)\n",
-      "Requirement already satisfied: contourpy>=1.0.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (1.0.7)\n",
-      "Requirement already satisfied: packaging>=20.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (22.0)\n",
-      "Requirement already satisfied: kiwisolver>=1.0.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (1.4.4)\n",
-      "Requirement already satisfied: fonttools>=4.22.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (4.39.3)\n",
-      "Requirement already satisfied: cycler>=0.10 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (0.11.0)\n",
-      "Requirement already satisfied: pytz>=2017.3 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas!=1.4.0,<1.6,>1.1->pandas-profiling==3.6.2) (2022.7.1)\n",
-      "Requirement already satisfied: joblib>=0.14.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from phik<0.13,>=0.11.1->pandas-profiling==3.6.2) (1.2.0)\n",
-      "Requirement already satisfied: typing-extensions>=4.2.0 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pydantic<1.11,>=1.8.1->pandas-profiling==3.6.2) (4.5.0)\n",
-      "Requirement already satisfied: six>=1.5 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from python-dateutil>=2.7->matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (1.16.0)\n",
-      "Requirement already satisfied: certifi>=2017.4.17 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<2.29,>=2.24.0->pandas-profiling==3.6.2) (2022.12.7)\n",
-      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<2.29,>=2.24.0->pandas-profiling==3.6.2) (1.26.15)\n",
-      "Requirement already satisfied: charset-normalizer<4,>=2 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<2.29,>=2.24.0->pandas-profiling==3.6.2) (3.1.0)\n",
-      "Requirement already satisfied: idna<4,>=2.5 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<2.29,>=2.24.0->pandas-profiling==3.6.2) (3.4)\n",
-      "Requirement already satisfied: patsy>=0.5.2 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from statsmodels<0.14,>=0.13.2->pandas-profiling==3.6.2) (0.5.3)\n",
-      "Requirement already satisfied: PyWavelets in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from imagehash->visions[type_image_path]==0.7.5->pandas-profiling==3.6.2) (1.4.1)\n",
-      "Requirement already satisfied: pandas==1.2.3 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (1.2.3)\n",
-      "Requirement already satisfied: python-dateutil>=2.7.3 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas==1.2.3) (2.8.2)\n",
-      "Requirement already satisfied: pytz>=2017.3 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas==1.2.3) (2022.7.1)\n",
-      "Requirement already satisfied: numpy>=1.16.5 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas==1.2.3) (1.23.5)\n",
-      "Requirement already satisfied: six>=1.5 in /opt/anaconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from python-dateutil>=2.7.3->pandas==1.2.3) (1.16.0)\n"
+      "Requirement already satisfied: wandb==0.13.9 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (0.13.9)\n",
+      "Requirement already satisfied: requests<3,>=2.0.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (2.31.0)\n",
+      "Requirement already satisfied: psutil>=5.0.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (5.9.8)\n",
+      "Requirement already satisfied: PyYAML in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (6.0.1)\n",
+      "Requirement already satisfied: appdirs>=1.4.3 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (1.4.4)\n",
+      "Requirement already satisfied: setproctitle in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (1.3.3)\n",
+      "Requirement already satisfied: typing-extensions in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (4.9.0)\n",
+      "Requirement already satisfied: sentry-sdk>=1.0.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (1.40.4)\n",
+      "Requirement already satisfied: GitPython>=1.0.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (3.1.41)\n",
+      "Requirement already satisfied: docker-pycreds>=0.4.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (0.4.0)\n",
+      "Requirement already satisfied: Click!=8.0.0,>=7.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (8.1.7)\n",
+      "Requirement already satisfied: setuptools in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (59.8.0)\n",
+      "Requirement already satisfied: pathtools in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (0.1.2)\n",
+      "Requirement already satisfied: protobuf!=4.21.0,<5,>=3.15.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from wandb==0.13.9) (4.21.12)\n",
+      "Requirement already satisfied: six>=1.4.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from docker-pycreds>=0.4.0->wandb==0.13.9) (1.16.0)\n",
+      "Requirement already satisfied: gitdb<5,>=4.0.1 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from GitPython>=1.0.0->wandb==0.13.9) (4.0.11)\n",
+      "Requirement already satisfied: smmap<6,>=3.0.1 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from gitdb<5,>=4.0.1->GitPython>=1.0.0->wandb==0.13.9) (5.0.0)\n",
+      "Requirement already satisfied: urllib3<3,>=1.21.1 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<3,>=2.0.0->wandb==0.13.9) (2.2.0)\n",
+      "Requirement already satisfied: certifi>=2017.4.17 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<3,>=2.0.0->wandb==0.13.9) (2024.2.2)\n",
+      "Requirement already satisfied: charset-normalizer<4,>=2 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<3,>=2.0.0->wandb==0.13.9) (3.3.2)\n",
+      "Requirement already satisfied: idna<4,>=2.5 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<3,>=2.0.0->wandb==0.13.9) (3.6)\n",
+      "Collecting pandas-profiling==3.6.2\n",
+      "  Downloading pandas_profiling-3.6.2-py2.py3-none-any.whl (328 kB)\n",
+      "\u001b[K     |████████████████████████████████| 328 kB 3.5 MB/s eta 0:00:01\n",
+      "\u001b[?25hRequirement already satisfied: pandas!=1.4.0,<1.6,>1.1 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (1.2.3)\n",
+      "Requirement already satisfied: jinja2<3.2,>=2.11.1 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (2.11.3)\n",
+      "Requirement already satisfied: PyYAML<6.1,>=5.0.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (6.0.1)\n",
+      "Requirement already satisfied: matplotlib<3.7,>=3.2 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas-profiling==3.6.2) (3.6.2)\n",
+      "Collecting htmlmin==0.1.12\n",
+      "  Downloading htmlmin-0.1.12.tar.gz (19 kB)\n",
+      "Collecting visions[type_image_path]==0.7.5\n",
+      "  Downloading visions-0.7.5-py3-none-any.whl (102 kB)\n",
+      "\u001b[K     |████████████████████████████████| 102 kB 22.1 MB/s eta 0:00:01\n",
+      "\u001b[?25hRequirement already satisfied: attrs>=19.3.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from visions[type_image_path]==0.7.5->pandas-profiling==3.6.2) (23.2.0)\n",
+      "Requirement already satisfied: Pillow in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from visions[type_image_path]==0.7.5->pandas-profiling==3.6.2) (9.4.0)\n",
+      "Requirement already satisfied: MarkupSafe>=0.23 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from jinja2<3.2,>=2.11.1->pandas-profiling==3.6.2) (1.1.1)\n",
+      "Requirement already satisfied: contourpy>=1.0.1 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (1.2.0)\n",
+      "Requirement already satisfied: fonttools>=4.22.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (4.48.1)\n",
+      "Requirement already satisfied: pyparsing>=2.2.1 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (3.1.1)\n",
+      "Requirement already satisfied: python-dateutil>=2.7 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (2.8.2)\n",
+      "Requirement already satisfied: kiwisolver>=1.0.1 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (1.4.5)\n",
+      "Requirement already satisfied: packaging>=20.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (22.0)\n",
+      "Requirement already satisfied: cycler>=0.10 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (0.12.1)\n",
+      "Collecting multimethod<1.10,>=1.4\n",
+      "  Downloading multimethod-1.9.1-py3-none-any.whl (10 kB)\n",
+      "Collecting networkx>=2.4\n",
+      "  Downloading networkx-3.2.1-py3-none-any.whl (1.6 MB)\n",
+      "\u001b[K     |████████████████████████████████| 1.6 MB 23.1 MB/s eta 0:00:01\n",
+      "\u001b[?25hCollecting numpy<1.24,>=1.16.0\n",
+      "  Downloading numpy-1.23.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.1 MB)\n",
+      "\u001b[K     |████████████████████████████████| 17.1 MB 13.2 MB/s eta 0:00:01\n",
+      "\u001b[?25hRequirement already satisfied: pytz>=2017.3 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas!=1.4.0,<1.6,>1.1->pandas-profiling==3.6.2) (2022.7.1)\n",
+      "Collecting phik<0.13,>=0.11.1\n",
+      "  Downloading phik-0.12.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (686 kB)\n",
+      "\u001b[K     |████████████████████████████████| 686 kB 38.2 MB/s eta 0:00:01\n",
+      "\u001b[?25hRequirement already satisfied: joblib>=0.14.1 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from phik<0.13,>=0.11.1->pandas-profiling==3.6.2) (1.3.2)\n",
+      "Collecting pydantic<1.11,>=1.8.1\n",
+      "  Downloading pydantic-1.10.14-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.2 MB)\n",
+      "\u001b[K     |████████████████████████████████| 3.2 MB 42.2 MB/s eta 0:00:01\n",
+      "\u001b[?25hRequirement already satisfied: typing-extensions>=4.2.0 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pydantic<1.11,>=1.8.1->pandas-profiling==3.6.2) (4.9.0)\n",
+      "Requirement already satisfied: six>=1.5 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from python-dateutil>=2.7->matplotlib<3.7,>=3.2->pandas-profiling==3.6.2) (1.16.0)\n",
+      "Collecting requests<2.29,>=2.24.0\n",
+      "  Downloading requests-2.28.2-py3-none-any.whl (62 kB)\n",
+      "\u001b[K     |████████████████████████████████| 62 kB 1.9 MB/s  eta 0:00:01\n",
+      "\u001b[?25hRequirement already satisfied: idna<4,>=2.5 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<2.29,>=2.24.0->pandas-profiling==3.6.2) (3.6)\n",
+      "Requirement already satisfied: charset-normalizer<4,>=2 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<2.29,>=2.24.0->pandas-profiling==3.6.2) (3.3.2)\n",
+      "Requirement already satisfied: certifi>=2017.4.17 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from requests<2.29,>=2.24.0->pandas-profiling==3.6.2) (2024.2.2)\n",
+      "Collecting scipy<1.10,>=1.4.1\n",
+      "  Downloading scipy-1.9.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (33.8 MB)\n",
+      "\u001b[K     |████████████████████████████████| 33.8 MB 19.7 MB/s eta 0:00:01\n",
+      "\u001b[?25hCollecting seaborn<0.13,>=0.10.1\n",
+      "  Downloading seaborn-0.12.2-py3-none-any.whl (293 kB)\n",
+      "\u001b[K     |████████████████████████████████| 293 kB 30.8 MB/s eta 0:00:01\n",
+      "\u001b[?25hCollecting statsmodels<0.14,>=0.13.2\n",
+      "  Downloading statsmodels-0.13.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (9.9 MB)\n",
+      "\u001b[K     |████████████████████████████████| 9.9 MB 33.1 MB/s eta 0:00:01\n",
+      "\u001b[?25hCollecting patsy>=0.5.2\n",
+      "  Downloading patsy-0.5.6-py2.py3-none-any.whl (233 kB)\n",
+      "\u001b[K     |████████████████████████████████| 233 kB 34.3 MB/s eta 0:00:01\n",
+      "\u001b[?25hCollecting tangled-up-in-unicode>=0.0.4\n",
+      "  Downloading tangled_up_in_unicode-0.2.0-py3-none-any.whl (4.7 MB)\n",
+      "\u001b[K     |████████████████████████████████| 4.7 MB 31.9 MB/s eta 0:00:01\n",
+      "\u001b[?25hCollecting tqdm<4.65,>=4.48.2\n",
+      "  Downloading tqdm-4.64.1-py2.py3-none-any.whl (78 kB)\n",
+      "\u001b[K     |████████████████████████████████| 78 kB 5.0 MB/s  eta 0:00:01\n",
+      "\u001b[?25hCollecting typeguard<2.14,>=2.13.2\n",
+      "  Downloading typeguard-2.13.3-py3-none-any.whl (17 kB)\n",
+      "Collecting urllib3<1.27,>=1.21.1\n",
+      "  Downloading urllib3-1.26.18-py2.py3-none-any.whl (143 kB)\n",
+      "\u001b[K     |████████████████████████████████| 143 kB 13.1 MB/s eta 0:00:01\n",
+      "\u001b[?25hCollecting imagehash\n",
+      "  Downloading ImageHash-4.3.1-py2.py3-none-any.whl (296 kB)\n",
+      "\u001b[K     |████████████████████████████████| 296 kB 25.2 MB/s eta 0:00:01\n",
+      "\u001b[?25hCollecting PyWavelets\n",
+      "  Downloading pywavelets-1.5.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.5 MB)\n",
+      "\u001b[K     |████████████████████████████████| 4.5 MB 35.7 MB/s eta 0:00:01\n",
+      "\u001b[?25hBuilding wheels for collected packages: htmlmin\n",
+      "  Building wheel for htmlmin (setup.py) ... \u001b[?25ldone\n",
+      "\u001b[?25h  Created wheel for htmlmin: filename=htmlmin-0.1.12-py3-none-any.whl size=27099 sha256=fd921849b981f2f314c808ba97ddfd2627809ee023420af37823540617930984\n",
+      "  Stored in directory: /home/blake/.cache/pip/wheels/1d/05/04/c6d7d3b66539d9e659ac6dfe81e2d0fd4c1a8316cc5a403300\n",
+      "Successfully built htmlmin\n",
+      "Installing collected packages: numpy, tangled-up-in-unicode, scipy, PyWavelets, networkx, multimethod, visions, urllib3, patsy, imagehash, typeguard, tqdm, statsmodels, seaborn, requests, pydantic, phik, htmlmin, pandas-profiling\n",
+      "  Attempting uninstall: numpy\n",
+      "    Found existing installation: numpy 1.24.1\n",
+      "    Uninstalling numpy-1.24.1:\n",
+      "      Successfully uninstalled numpy-1.24.1\n",
+      "  Attempting uninstall: scipy\n",
+      "    Found existing installation: scipy 1.12.0\n",
+      "    Uninstalling scipy-1.12.0:\n",
+      "      Successfully uninstalled scipy-1.12.0\n",
+      "  Attempting uninstall: urllib3\n",
+      "    Found existing installation: urllib3 2.2.0\n",
+      "    Uninstalling urllib3-2.2.0:\n",
+      "      Successfully uninstalled urllib3-2.2.0\n",
+      "  Attempting uninstall: tqdm\n",
+      "    Found existing installation: tqdm 4.66.2\n",
+      "    Uninstalling tqdm-4.66.2:\n",
+      "      Successfully uninstalled tqdm-4.66.2\n",
+      "  Attempting uninstall: requests\n",
+      "    Found existing installation: requests 2.31.0\n",
+      "    Uninstalling requests-2.31.0:\n",
+      "      Successfully uninstalled requests-2.31.0\n",
+      "Successfully installed PyWavelets-1.5.0 htmlmin-0.1.12 imagehash-4.3.1 multimethod-1.9.1 networkx-3.2.1 numpy-1.23.5 pandas-profiling-3.6.2 patsy-0.5.6 phik-0.12.4 pydantic-1.10.14 requests-2.28.2 scipy-1.9.3 seaborn-0.12.2 statsmodels-0.13.5 tangled-up-in-unicode-0.2.0 tqdm-4.64.1 typeguard-2.13.3 urllib3-1.26.18 visions-0.7.5\n",
+      "Requirement already satisfied: pandas==1.2.3 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (1.2.3)\n",
+      "Requirement already satisfied: python-dateutil>=2.7.3 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas==1.2.3) (2.8.2)\n",
+      "Requirement already satisfied: pytz>=2017.3 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas==1.2.3) (2022.7.1)\n",
+      "Requirement already satisfied: numpy>=1.16.5 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from pandas==1.2.3) (1.23.5)\n",
+      "Requirement already satisfied: six>=1.5 in /home/blake/miniconda3/envs/nyc_airbnb_dev/lib/python3.9/site-packages (from python-dateutil>=2.7.3->pandas==1.2.3) (1.16.0)\n"
      ]
     }
    ],
@@ -90,7 +152,7 @@
   },
   {
    "cell_type": "markdown",
-   "id": "54c4f98a",
+   "id": "537473f8",
    "metadata": {},
    "source": [
     "1. Fetch the artifact we just created (sample.csv) from W&B and read it with pandas:"
@@ -98,64 +160,22 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
-   "id": "eed98c34",
+   "execution_count": 2,
+   "id": "8c3eacdb",
    "metadata": {},
    "outputs": [
     {
-     "data": {
-      "text/html": [
-       "Finishing last run (ID:v3d3q3rf) before initializing another..."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Waiting for W&B process to finish... <strong style=\"color:green\">(success).</strong>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "a37b04273ead4a168e477c0394de3fcf",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value='0.043 MB of 0.043 MB uploaded (0.000 MB deduped)\\r'), FloatProgress(value=1.0, max…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       " View run <strong style=\"color:#cdcd00\">visionary-lake-13</strong> at: <a href=\"https://wandb.ai/annyang1963/nyc_airbnb/runs/v3d3q3rf\" target=\"_blank\">https://wandb.ai/annyang1963/nyc_airbnb/runs/v3d3q3rf</a><br/>Synced 7 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mblabelpedio\u001b[0m. Use \u001b[1m`wandb login --relogin`\u001b[0m to force relogin\n"
+     ]
     },
     {
      "data": {
       "text/html": [
-       "Find logs at: <code>./wandb/run-20230412_183324-v3d3q3rf/logs</code>"
+       "wandb version 0.16.3 is available!  To upgrade, please run:\n",
+       " $ pip install wandb --upgrade"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -167,7 +187,7 @@
     {
      "data": {
       "text/html": [
-       "Successfully finished last run (ID:v3d3q3rf). Initializing new run:<br/>"
+       "Tracking run with wandb version 0.13.9"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -176,25 +196,10 @@
      "metadata": {},
      "output_type": "display_data"
     },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "110e5eb88c9f4f9bada3b547c8cd62eb",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value='Waiting for wandb.init()...\\r'), FloatProgress(value=0.016671707533333326, max=1.0…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
     {
      "data": {
       "text/html": [
-       "wandb version 0.14.2 is available!  To upgrade, please run:\n",
-       " $ pip install wandb --upgrade"
+       "Run data is saved locally in <code>/home/blake/Project-Build-an-ML-Pipeline-Starter/src/eda/wandb/run-20240213_174151-fnjrl7gn</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -206,7 +211,7 @@
     {
      "data": {
       "text/html": [
-       "Tracking run with wandb version 0.13.9"
+       "Syncing run <strong><a href=\"https://wandb.ai/blabelpedio/nyc_airbnb/runs/fnjrl7gn\" target=\"_blank\">glistening-chrysanthemum-2</a></strong> to <a href=\"https://wandb.ai/blabelpedio/nyc_airbnb\" target=\"_blank\">Weights & Biases</a> (<a href=\"https://wandb.me/run\" target=\"_blank\">docs</a>)<br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -218,7 +223,7 @@
     {
      "data": {
       "text/html": [
-       "Run data is saved locally in <code>/Users/hyang/Huimin project/Project-Build-an-ML-Pipeline-Starter/src/eda/wandb/run-20230412_183404-cl95qrqk</code>"
+       " View project at <a href=\"https://wandb.ai/blabelpedio/nyc_airbnb\" target=\"_blank\">https://wandb.ai/blabelpedio/nyc_airbnb</a>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -230,7 +235,7 @@
     {
      "data": {
       "text/html": [
-       "Syncing run <strong><a href=\"https://wandb.ai/annyang1963/nyc_airbnb/runs/cl95qrqk\" target=\"_blank\">summer-galaxy-14</a></strong> to <a href=\"https://wandb.ai/annyang1963/nyc_airbnb\" target=\"_blank\">Weights & Biases</a> (<a href=\"https://wandb.me/run\" target=\"_blank\">docs</a>)<br/>"
+       " View run at <a href=\"https://wandb.ai/blabelpedio/nyc_airbnb/runs/fnjrl7gn\" target=\"_blank\">https://wandb.ai/blabelpedio/nyc_airbnb/runs/fnjrl7gn</a>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -240,28 +245,23 @@
      "output_type": "display_data"
     },
     {
-     "data": {
-      "text/html": [
-       " View project at <a href=\"https://wandb.ai/annyang1963/nyc_airbnb\" target=\"_blank\">https://wandb.ai/annyang1963/nyc_airbnb</a>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Error in callback <bound method _WandbInit._pause_backend of <wandb.sdk.wandb_init._WandbInit object at 0x7f5e8c605490>> (for post_run_cell), with arguments args (<ExecutionResult object at 7f5e8c605580, execution_count=2 error_before_exec=None error_in_exec=None info=<ExecutionInfo object at 7f5e8c6055e0, raw_cell=\"import wandb\n",
+      "import pandas as pd\n",
+      "# Note that we us..\" store_history=True silent=False shell_futures=True cell_id=20215687-ec68-40bd-8f52-f6f31d1d43bd> result=None>,),kwargs {}:\n"
+     ]
     },
     {
-     "data": {
-      "text/html": [
-       " View run at <a href=\"https://wandb.ai/annyang1963/nyc_airbnb/runs/cl95qrqk\" target=\"_blank\">https://wandb.ai/annyang1963/nyc_airbnb/runs/cl95qrqk</a>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
+     "ename": "TypeError",
+     "evalue": "_pause_backend() takes 1 positional argument but 2 were given",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;31mTypeError\u001b[0m: _pause_backend() takes 1 positional argument but 2 were given"
+     ]
     }
    ],
    "source": [
@@ -275,7 +275,7 @@
   },
   {
    "cell_type": "markdown",
-   "id": "472b8c0d",
+   "id": "c9715517",
    "metadata": {},
    "source": [
     "2. Explore the data in df"
@@ -283,10 +283,27 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 8,
-   "id": "e7902159",
+   "execution_count": 4,
+   "id": "0fe79d23",
    "metadata": {},
    "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Error in callback <bound method _WandbInit._resume_backend of <wandb.sdk.wandb_init._WandbInit object at 0x7f5e8c605490>> (for pre_run_cell), with arguments args (<ExecutionInfo object at 7f5e4d691a00, raw_cell=\"df.info()\" store_history=True silent=False shell_futures=True cell_id=4b8c682c-64ac-4921-bde5-59c5b5cfd5d9>,),kwargs {}:\n"
+     ]
+    },
+    {
+     "ename": "TypeError",
+     "evalue": "_resume_backend() takes 1 positional argument but 2 were given",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;31mTypeError\u001b[0m: _resume_backend() takes 1 positional argument but 2 were given"
+     ]
+    },
     {
      "name": "stdout",
      "output_type": "stream",
@@ -313,7 +330,18 @@
       " 14  calculated_host_listings_count  20000 non-null  int64  \n",
       " 15  availability_365                20000 non-null  int64  \n",
       "dtypes: float64(3), int64(7), object(6)\n",
-      "memory usage: 2.4+ MB\n"
+      "memory usage: 2.4+ MB\n",
+      "Error in callback <bound method _WandbInit._pause_backend of <wandb.sdk.wandb_init._WandbInit object at 0x7f5e8c605490>> (for post_run_cell), with arguments args (<ExecutionResult object at 7f5e4d691700, execution_count=4 error_before_exec=None error_in_exec=None info=<ExecutionInfo object at 7f5e4d691a00, raw_cell=\"df.info()\" store_history=True silent=False shell_futures=True cell_id=4b8c682c-64ac-4921-bde5-59c5b5cfd5d9> result=None>,),kwargs {}:\n"
+     ]
+    },
+    {
+     "ename": "TypeError",
+     "evalue": "_pause_backend() takes 1 positional argument but 2 were given",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;31mTypeError\u001b[0m: _pause_backend() takes 1 positional argument but 2 were given"
      ]
     }
    ],
@@ -323,10 +351,27 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
-   "id": "ef6f1457",
+   "execution_count": 6,
+   "id": "6cf108b8",
    "metadata": {},
    "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Error in callback <bound method _WandbInit._resume_backend of <wandb.sdk.wandb_init._WandbInit object at 0x7f5e8c605490>> (for pre_run_cell), with arguments args (<ExecutionInfo object at 7f5e4d7b2f10, raw_cell=\"df.describe()\" store_history=True silent=False shell_futures=True cell_id=282728d3-b382-4524-965e-45342aacc360>,),kwargs {}:\n"
+     ]
+    },
+    {
+     "ename": "TypeError",
+     "evalue": "_resume_backend() takes 1 positional argument but 2 were given",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;31mTypeError\u001b[0m: _resume_backend() takes 1 positional argument but 2 were given"
+     ]
+    },
     {
      "data": {
       "text/html": [
@@ -501,9 +546,54 @@
        "max                        327.000000        365.000000  "
       ]
      },
-     "execution_count": 9,
+     "execution_count": 6,
      "metadata": {},
      "output_type": "execute_result"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Error in callback <bound method _WandbInit._pause_backend of <wandb.sdk.wandb_init._WandbInit object at 0x7f5e8c605490>> (for post_run_cell), with arguments args (<ExecutionResult object at 7f5e4d7b2d90, execution_count=6 error_before_exec=None error_in_exec=None info=<ExecutionInfo object at 7f5e4d7b2f10, raw_cell=\"df.describe()\" store_history=True silent=False shell_futures=True cell_id=282728d3-b382-4524-965e-45342aacc360> result=                 id       host_id      latitude     longitude         price  \\\n",
+      "count  2.000000e+04  2.000000e+04  20000.000000  20000.000000  20000.000000   \n",
+      "mean   1.892380e+07  6.746034e+07     40.728455    -73.952125    153.269050   \n",
+      "std    1.101223e+07  7.857936e+07      0.054755      0.046559    243.325609   \n",
+      "min    2.539000e+03  2.571000e+03     40.508730    -74.239140      0.000000   \n",
+      "25%    9.393540e+06  7.853718e+06     40.689420    -73.983030     69.000000   \n",
+      "50%    1.952117e+07  3.111431e+07     40.722730    -73.955640    105.000000   \n",
+      "75%    2.912936e+07  1.068426e+08     40.762990    -73.936380    175.000000   \n",
+      "max    3.648561e+07  2.742733e+08     40.913060    -73.717950  10000.000000   \n",
+      "\n",
+      "       minimum_nights  number_of_reviews  reviews_per_month  \\\n",
+      "count    20000.000000       20000.000000       15877.000000   \n",
+      "mean         6.992100          23.274100           1.377446   \n",
+      "std         21.645449          44.927793           1.683006   \n",
+      "min          1.000000           0.000000           0.010000   \n",
+      "25%          1.000000           1.000000           0.190000   \n",
+      "50%          2.000000           5.000000           0.720000   \n",
+      "75%          5.000000          23.000000           2.010000   \n",
+      "max       1250.000000         607.000000          27.950000   \n",
+      "\n",
+      "       calculated_host_listings_count  availability_365  \n",
+      "count                    20000.000000      20000.000000  \n",
+      "mean                         6.955450        112.901200  \n",
+      "std                         32.433831        131.762226  \n",
+      "min                          1.000000          0.000000  \n",
+      "25%                          1.000000          0.000000  \n",
+      "50%                          1.000000         44.000000  \n",
+      "75%                          2.000000        229.000000  \n",
+      "max                        327.000000        365.000000  >,),kwargs {}:\n"
+     ]
+    },
+    {
+     "ename": "TypeError",
+     "evalue": "_pause_backend() takes 1 positional argument but 2 were given",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;31mTypeError\u001b[0m: _pause_backend() takes 1 positional argument but 2 were given"
+     ]
     }
    ],
    "source": [
@@ -512,10 +602,27 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 10,
-   "id": "13548f59",
+   "execution_count": 7,
+   "id": "83bf5e26",
    "metadata": {},
    "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Error in callback <bound method _WandbInit._resume_backend of <wandb.sdk.wandb_init._WandbInit object at 0x7f5e8c605490>> (for pre_run_cell), with arguments args (<ExecutionInfo object at 7f5e4d67cdf0, raw_cell=\"df.head()\" store_history=True silent=False shell_futures=True cell_id=ca52e6c9-7748-4c1f-8c68-4bc6c60a0146>,),kwargs {}:\n"
+     ]
+    },
+    {
+     "ename": "TypeError",
+     "evalue": "_resume_backend() takes 1 positional argument but 2 were given",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;31mTypeError\u001b[0m: _resume_backend() takes 1 positional argument but 2 were given"
+     ]
+    },
     {
      "data": {
       "text/html": [
@@ -685,9 +792,52 @@
        "4               0.52                               2                 8  "
       ]
      },
-     "execution_count": 10,
+     "execution_count": 7,
      "metadata": {},
      "output_type": "execute_result"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Error in callback <bound method _WandbInit._pause_backend of <wandb.sdk.wandb_init._WandbInit object at 0x7f5e8c605490>> (for post_run_cell), with arguments args (<ExecutionResult object at 7f5e4d67ce20, execution_count=7 error_before_exec=None error_in_exec=None info=<ExecutionInfo object at 7f5e4d67cdf0, raw_cell=\"df.head()\" store_history=True silent=False shell_futures=True cell_id=ca52e6c9-7748-4c1f-8c68-4bc6c60a0146> result=         id                                               name    host_id  \\\n",
+      "0   9138664                Private Lg Room 15 min to Manhattan   47594947   \n",
+      "1  31444015  TIME SQUARE CHARMING ONE BED IN HELL'S KITCHEN...    8523790   \n",
+      "2   8741020  Voted #1 Location Quintessential 1BR W Village...   45854238   \n",
+      "3  34602077  Spacious 1 bedroom apartment 15min from Manhattan  261055465   \n",
+      "4  23203149   Big beautiful bedroom in huge Bushwick apartment     143460   \n",
+      "\n",
+      "  host_name neighbourhood_group   neighbourhood  latitude  longitude  \\\n",
+      "0      Iris              Queens       Sunnyside  40.74271  -73.92493   \n",
+      "1    Johlex           Manhattan  Hell's Kitchen  40.76682  -73.98878   \n",
+      "2      John           Manhattan    West Village  40.73631  -74.00611   \n",
+      "3     Regan              Queens         Astoria  40.76424  -73.92351   \n",
+      "4     Megan            Brooklyn        Bushwick  40.69839  -73.92044   \n",
+      "\n",
+      "         room_type  price  minimum_nights  number_of_reviews last_review  \\\n",
+      "0     Private room     74               2                  6  2019-05-26   \n",
+      "1  Entire home/apt    170               3                  0         NaN   \n",
+      "2  Entire home/apt    245               3                 51  2018-09-19   \n",
+      "3  Entire home/apt    125               3                  1  2019-05-24   \n",
+      "4     Private room     65               2                  8  2019-06-23   \n",
+      "\n",
+      "   reviews_per_month  calculated_host_listings_count  availability_365  \n",
+      "0               0.13                               1                 5  \n",
+      "1                NaN                               1               188  \n",
+      "2               1.12                               1                 0  \n",
+      "3               0.65                               1                13  \n",
+      "4               0.52                               2                 8  >,),kwargs {}:\n"
+     ]
+    },
+    {
+     "ename": "TypeError",
+     "evalue": "_pause_backend() takes 1 positional argument but 2 were given",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;31mTypeError\u001b[0m: _pause_backend() takes 1 positional argument but 2 were given"
+     ]
     }
    ],
    "source": [
@@ -696,7 +846,7 @@
   },
   {
    "cell_type": "markdown",
-   "id": "ecfee692",
+   "id": "7193e0db",
    "metadata": {},
    "source": [
     "3. What do you notice in the data? Look around and see what you can find.\n",
@@ -706,7 +856,7 @@
   },
   {
    "cell_type": "markdown",
-   "id": "b4bb415f",
+   "id": "49ea26c7",
    "metadata": {},
    "source": [
     "4. Fix some of the little problems we have found in the data with the following code:"
@@ -714,10 +864,51 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 11,
-   "id": "4d685317",
+   "execution_count": 8,
+   "id": "5c11278e",
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Error in callback <bound method _WandbInit._resume_backend of <wandb.sdk.wandb_init._WandbInit object at 0x7f5e8c605490>> (for pre_run_cell), with arguments args (<ExecutionInfo object at 7f5e4d67cd90, raw_cell=\"# Drop outliers\n",
+      "min_price = 10\n",
+      "max_price = 350\n",
+      "idx..\" store_history=True silent=False shell_futures=True cell_id=d9b4f169-89a5-4f64-a2b7-2a6c5ee6c98a>,),kwargs {}:\n"
+     ]
+    },
+    {
+     "ename": "TypeError",
+     "evalue": "_resume_backend() takes 1 positional argument but 2 were given",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;31mTypeError\u001b[0m: _resume_backend() takes 1 positional argument but 2 were given"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Error in callback <bound method _WandbInit._pause_backend of <wandb.sdk.wandb_init._WandbInit object at 0x7f5e8c605490>> (for post_run_cell), with arguments args (<ExecutionResult object at 7f5e4d67c460, execution_count=8 error_before_exec=None error_in_exec=None info=<ExecutionInfo object at 7f5e4d67cd90, raw_cell=\"# Drop outliers\n",
+      "min_price = 10\n",
+      "max_price = 350\n",
+      "idx..\" store_history=True silent=False shell_futures=True cell_id=d9b4f169-89a5-4f64-a2b7-2a6c5ee6c98a> result=None>,),kwargs {}:\n"
+     ]
+    },
+    {
+     "ename": "TypeError",
+     "evalue": "_pause_backend() takes 1 positional argument but 2 were given",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;31mTypeError\u001b[0m: _pause_backend() takes 1 positional argument but 2 were given"
+     ]
+    }
+   ],
    "source": [
     "# Drop outliers\n",
     "min_price = 10\n",
@@ -730,7 +921,7 @@
   },
   {
    "cell_type": "markdown",
-   "id": "17990df4",
+   "id": "67d0c6da",
    "metadata": {},
    "source": [
     "Note how we did not impute missing values. We will do that in the inference pipeline, so we will be able to handle missing values also in production."
@@ -738,7 +929,7 @@
   },
   {
    "cell_type": "markdown",
-   "id": "09287f29",
+   "id": "77b63599",
    "metadata": {},
    "source": [
     "5. Check with df.info() that all obvious problems have been solved"
@@ -746,10 +937,27 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 12,
-   "id": "b83b4970",
+   "execution_count": 9,
+   "id": "d1b248be",
    "metadata": {},
    "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Error in callback <bound method _WandbInit._resume_backend of <wandb.sdk.wandb_init._WandbInit object at 0x7f5e8c605490>> (for pre_run_cell), with arguments args (<ExecutionInfo object at 7f5e4d6914c0, raw_cell=\"df.info()\" store_history=True silent=False shell_futures=True cell_id=4be69dba-305f-45de-af48-a485bf908d20>,),kwargs {}:\n"
+     ]
+    },
+    {
+     "ename": "TypeError",
+     "evalue": "_resume_backend() takes 1 positional argument but 2 were given",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;31mTypeError\u001b[0m: _resume_backend() takes 1 positional argument but 2 were given"
+     ]
+    },
     {
      "name": "stdout",
      "output_type": "stream",
@@ -776,7 +984,18 @@
       " 14  calculated_host_listings_count  19001 non-null  int64         \n",
       " 15  availability_365                19001 non-null  int64         \n",
       "dtypes: datetime64[ns](1), float64(3), int64(7), object(5)\n",
-      "memory usage: 2.5+ MB\n"
+      "memory usage: 2.5+ MB\n",
+      "Error in callback <bound method _WandbInit._pause_backend of <wandb.sdk.wandb_init._WandbInit object at 0x7f5e8c605490>> (for post_run_cell), with arguments args (<ExecutionResult object at 7f5e4d6919d0, execution_count=9 error_before_exec=None error_in_exec=None info=<ExecutionInfo object at 7f5e4d6914c0, raw_cell=\"df.info()\" store_history=True silent=False shell_futures=True cell_id=4be69dba-305f-45de-af48-a485bf908d20> result=None>,),kwargs {}:\n"
+     ]
+    },
+    {
+     "ename": "TypeError",
+     "evalue": "_pause_backend() takes 1 positional argument but 2 were given",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;31mTypeError\u001b[0m: _pause_backend() takes 1 positional argument but 2 were given"
      ]
     }
    ],
@@ -786,7 +1005,7 @@
   },
   {
    "cell_type": "markdown",
-   "id": "d727e697",
+   "id": "31d42771",
    "metadata": {},
    "source": [
     "6. Terminate the run by running `run.finish()`"
@@ -794,52 +1013,31 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 13,
-   "id": "48b38586",
+   "execution_count": null,
+   "id": "5f5ab0e7",
    "metadata": {},
    "outputs": [
     {
-     "data": {
-      "text/html": [
-       "Waiting for W&B process to finish... <strong style=\"color:green\">(success).</strong>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "0a45b778e49c4dfeb3cc16a0684831b0",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value='0.043 MB of 0.057 MB uploaded (0.000 MB deduped)\\r'), FloatProgress(value=0.748456…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Error in callback <bound method _WandbInit._resume_backend of <wandb.sdk.wandb_init._WandbInit object at 0x7f5e8c605490>> (for pre_run_cell), with arguments args (<ExecutionInfo object at 7f5e4d67c310, raw_cell=\"run.finish()\" store_history=True silent=False shell_futures=True cell_id=7a74ffad-b423-477c-95b2-be54b4e8c191>,),kwargs {}:\n"
+     ]
     },
     {
-     "data": {
-      "text/html": [
-       " View run <strong style=\"color:#cdcd00\">summer-galaxy-14</strong> at: <a href=\"https://wandb.ai/annyang1963/nyc_airbnb/runs/cl95qrqk\" target=\"_blank\">https://wandb.ai/annyang1963/nyc_airbnb/runs/cl95qrqk</a><br/>Synced 7 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
+     "ename": "TypeError",
+     "evalue": "_resume_backend() takes 1 positional argument but 2 were given",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;31mTypeError\u001b[0m: _resume_backend() takes 1 positional argument but 2 were given"
+     ]
     },
     {
      "data": {
       "text/html": [
-       "Find logs at: <code>./wandb/run-20230412_183404-cl95qrqk/logs</code>"
+       "Waiting for W&B process to finish... <strong style=\"color:green\">(success).</strong>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -855,7 +1053,7 @@
   },
   {
    "cell_type": "markdown",
-   "id": "13f82b21",
+   "id": "4797acb3",
    "metadata": {},
    "source": [
     "7. Save the notebook."
diff --git a/src/train_random_forest/run.py b/src/train_random_forest/run.py
index cc35d9b..260c83c 100644
--- a/src/train_random_forest/run.py
+++ b/src/train_random_forest/run.py
@@ -5,6 +5,7 @@ This script trains a Random Forest
 import argparse
 import logging
 import os
+from pathlib import Path
 import shutil
 import matplotlib.pyplot as plt
 
@@ -73,7 +74,7 @@ def go(args):
 
     ######################################
     # Fit the pipeline sk_pipe by calling the .fit method on X_train and y_train
-    # YOUR CODE HERE
+    sk_pipe.fit(X_train,y_train)
     ######################################
 
     # Compute r2 and MAE
@@ -95,12 +96,11 @@ def go(args):
     ######################################
     # Save the sk_pipe pipeline as a mlflow.sklearn model in the directory "random_forest_dir"
     # HINT: use mlflow.sklearn.save_model
-    signature = mlflow.models.infer_signature(X_val, y_pred)
+    model_path = Path("random_forest_dir")
     mlflow.sklearn.save_model(
-        # YOUR CODE HERE
-        signature = signature,
-        input_example = X_train.iloc[:5]
-    )
+        sk_model = sk_pipe,
+        path = model_path
+        )
     ######################################
 
 
@@ -121,7 +121,7 @@ def go(args):
     # Here we save variable r_squared under the "r2" key
     run.summary['r2'] = r_squared
     # Now save the variable mae under the key "mae".
-    # YOUR CODE HERE
+    run.summary['mae'] = mae
     ######################################
 
     # Upload to W&B the feture importance visualization
@@ -164,7 +164,10 @@ def get_inference_pipeline(rf_config, max_tfidf_features):
     # 1 - A SimpleImputer(strategy="most_frequent") to impute missing values
     # 2 - A OneHotEncoder() step to encode the variable
     non_ordinal_categorical_preproc = make_pipeline(
-        # YOUR CODE HERE
+        make_pipeline(
+            SimpleImputer(strategy = "most_frequent"),
+            OneHotEncoder()
+            )
     )
     ######################################
 
@@ -227,7 +230,8 @@ def get_inference_pipeline(rf_config, max_tfidf_features):
 
     sk_pipe = Pipeline(
         steps =[
-        # YOUR CODE HERE
+        ("preprocessor", preprocessor),
+        ("random_forest", random_forest)
         ]
     )
 
